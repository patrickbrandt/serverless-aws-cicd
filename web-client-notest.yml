AWSTemplateFormatVersion: 2010-09-09
Description: CI+CD for serverless front-ends
Parameters:
  RepositoryName:
    Description: The name of the CodeCommit repo
    Default: my-repo
    Type: String
    AllowedPattern: '[\x20-\x7E]*'
    ConstraintDescription: Can contain only ASCII characters.
  DevelopmentBranchName:
    Description: The name of the development branch
    Default: master
    Type: String
    AllowedPattern: '[\x20-\x7E]*'
    ConstraintDescription: Can contain only ASCII characters.
  ApplicationName:
    Description: The name applied to all pipeline assets
    Default: my-app
    Type: String
    AllowedPattern: '[\x20-\x7E]*'
    ConstraintDescription: Can contain only ASCII characters.
  DevBucket:
    Description: The name of the development bucket that hosts the dev site
    Default: master
    Type: String
    AllowedPattern: '[\x20-\x7E]*'
    ConstraintDescription: Can contain only ASCII characters.
  ProdBucket:
    Description: The name of the production bucket that hosts the dev site
    Default: master
    Type: String
    AllowedPattern: '[\x20-\x7E]*'
    ConstraintDescription: Can contain only ASCII characters.
Resources:
  CodePipelineRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: codepipeline-service
          PolicyDocument:
            Statement:
              - Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
                Resource: '*'
                Effect: Allow
              - Action:
                  - s3:PutObject
                Resource:
                  - arn:aws:s3:::codepipeline*
                  - arn:aws:s3:::elasticbeanstalk*
                Effect: Allow
              - Action:
                  - codecommit:CancelUploadArchive
                  - codecommit:GetBranch
                  - codecommit:GetCommit
                  - codecommit:GetUploadArchiveStatus
                  - codecommit:UploadArchive
                Resource: '*'
                Effect: Allow
              - Action:
                  - codedeploy:CreateDeployment
                  - codedeploy:GetApplicationRevision
                  - codedeploy:GetDeployment
                  - codedeploy:GetDeploymentConfig
                  - codedeploy:RegisterApplicationRevision
                Resource: '*'
                Effect: Allow
              - Action:
                  - elasticbeanstalk:*
                  - ec2:*
                  - elasticloadbalancing:*
                  - autoscaling:*
                  - cloudwatch:*
                  - s3:*
                  - sns:*
                  - cloudformation:*
                  - rds:*
                  - sqs:*
                  - ecs:*
                  - iam:PassRole
                Resource: '*'
                Effect: Allow
              - Action:
                  - lambda:InvokeFunction
                  - lambda:ListFunctions
                Resource: '*'
                Effect: Allow
              - Action:
                  - opsworks:CreateDeployment
                  - opsworks:DescribeApps
                  - opsworks:DescribeCommands
                  - opsworks:DescribeDeployments
                  - opsworks:DescribeInstances
                  - opsworks:DescribeStacks
                  - opsworks:UpdateApp
                  - opsworks:UpdateStack
                Resource: '*'
                Effect: Allow
              - Action:
                  - cloudformation:CreateStack
                  - cloudformation:DeleteStack
                  - cloudformation:DescribeStacks
                  - cloudformation:UpdateStack
                  - cloudformation:CreateChangeSet
                  - cloudformation:DeleteChangeSet
                  - cloudformation:DescribeChangeSet
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:SetStackPolicy
                  - cloudformation:ValidateTemplate
                  - iam:PassRole
                Resource: '*'
                Effect: Allow
              - Action:
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                Resource: '*'
                Effect: Allow
  CodePipelineBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Join 
        - ''
        - - 'codepipeline-'
          - !Ref ApplicationName
          - '-'
          - !Ref 'AWS::Region'
          - '-'
          - !Ref 'AWS::AccountId'
  CodeBuildRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: codebuild-service
          PolicyDocument:
            Statement:
              - Effect: Allow
                Resource: '*'
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
              - Effect: Allow
                Resource: '*'
                Action:
                  - s3:*
  DeployDev:
    Type: 'AWS::CodeBuild::Project'
    Properties: 
      Artifacts:
        Type: CODEPIPELINE
      Description: 'CodeBuild project for deploying to the development environment'
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/nodejs:6.3.1 #http://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref.html#build-env-ref-available
        Type: LINUX_CONTAINER
      Name: !Join 
        - ''
        - - 'deploy-dev-'
          - !Ref ApplicationName
      ServiceRole: !Ref CodeBuildRole
      Source:
        BuildSpec: !Sub
          - |
            version: 0.2

            phases:
              install:
                commands:
                  - npm install
              build:
                commands:
                  - npm run build
                  - cd build
                  - aws s3 sync . s3://${BucketName} --delete
            artifacts:
              files:
                - '**/*'
          - { BucketName: !Ref DevBucket }
        Type: CODEPIPELINE
      TimeoutInMinutes: 5
  DeployProd:
    Type: 'AWS::CodeBuild::Project'
    Properties: 
      Artifacts:
        Type: CODEPIPELINE
      Description: 'CodeBuild project for deploying to the development environment'
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/nodejs:6.3.1 #http://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref.html#build-env-ref-available
        Type: LINUX_CONTAINER
      Name: !Join 
        - ''
        - - 'deploy-prod-'
          - !Ref ApplicationName
      ServiceRole: !Ref CodeBuildRole
      Source:
        BuildSpec: !Sub
          - |
            version: 0.2

            phases:
              install:
                commands:
                  - npm install
              build:
                commands:
                  - npm run build
                  - cd build
                  - aws s3 sync . s3://${BucketName} --delete
          - { BucketName: !Ref ProdBucket }
        Type: CODEPIPELINE
  CodePipelineStack:
    Type: 'AWS::CodePipeline::Pipeline'    
    Properties:
      RoleArn: !Join 
        - ''
        - - 'arn:aws:iam::'
          - !Ref 'AWS::AccountId'
          - ':role/'
          - !Ref CodePipelineRole
      ArtifactStore:
        Type: S3
        Location: !Ref CodePipelineBucket
      Stages:
        - Name: Source
          Actions:
            - InputArtifacts: []
              Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: '1'
                Provider: CodeCommit
              OutputArtifacts:
                - Name: !Ref ApplicationName
              Configuration:
                BranchName: !Ref DevelopmentBranchName
                RepositoryName: !Ref RepositoryName
              RunOrder: 1
        - Name: DeployDev
          Actions:
            - InputArtifacts:
                - Name: !Ref ApplicationName
              Name: DeployDev
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              OutputArtifacts:
                - Name: ProdCode
              Configuration:
                ProjectName: !Ref DeployDev
              RunOrder: 1        
        - Name: ApproveForProd
          Actions:
            - InputArtifacts: []
              Name: ApproveForProd
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Version: '1'
                Provider: Manual
              OutputArtifacts: []
              RunOrder: 1
        - Name: DeployProd
          Actions:
            - InputArtifacts:
                - Name: ProdCode
              Name: DeployProd
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              OutputArtifacts: []
              Configuration:
                ProjectName: !Ref DeployProd
              RunOrder: 1